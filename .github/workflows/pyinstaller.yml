name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true' # 检出所有子模块

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Extract version from tag
        id: get_version
        run: |
          if ("${{ github.ref }}" -like "refs/tags/v*") {
            $version = "${{ github.ref }}".Replace('refs/tags/v', '')
          } else {
            $version = "dev"
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          uv sync --dev
          uv add pyinstaller

      - name: Build with PyInstaller
        run: uv run pyinstaller --onefile --name=start${{ steps.get_version.outputs.version }} --icon=resource/icon.ico --add-data "bin;bin" src/main.py

      - name: Copy additional files
        run: |
          if (Test-Path "bin") {
            xcopy /s /i bin dist\bin
          }

      - name: Create Zip Archive
        run: |
          pushd dist
          echo start${{ steps.get_version.outputs.version }}.exe > start.bat
          echo pause >> start.bat
          7z a ../kinoko7danmaku${{ steps.get_version.outputs.version }}.zip *
          popd

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kinoko7danmaku-${{ steps.get_version.outputs.version }}
          path: kinoko7danmaku${{ steps.get_version.outputs.version }}.zip
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Extract version from tag
        id: get_version
        run: |
          version=${GITHUB_REF#refs/tags/v}
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: kinoko7danmaku-${{ steps.get_version.outputs.version }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          files: kinoko7danmaku${{ steps.get_version.outputs.version }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}